referendum_data <- read_csv("https://www.electoralcommission.org.uk/sites/default/files/2019-07/EU-referendum-result-data.csv")
library(tidyverse)
library(sf)
library(tmap)
referendum_data <- read_csv("https://www.electoralcommission.org.uk/sites/default/files/2019-07/EU-referendum-result-data.csv")
region_summary <- referendum_data %>%
group_by(Region) %>%
summarise(share_leave=sum(Leave)/sum(Valid_Votes)) %>%
arrange(desc(share_leave))
print(region_summary)
referendum_data <- referendum_data %>%
mutate(share_leave=Leave/Valid_Votes,
margin_leave=share_leave-0.5 )
referendum_data %>%
filter(Area!="Gibraltar") %>%
ggplot(aes(x=reorder(Area,-share_leave), y=margin_leave, fill=margin_leave))+
geom_bar(stat="identity", width=1)+
scale_fill_distiller(palette = 5, type="div", direction=1, guide="colourbar", limits=c(-0.3,0.3))+
scale_x_discrete(breaks=c("Lambeth","Slough","Boston")) +
geom_hline(aes(yintercept=0))+
theme_classic()+
xlab("LAs by Leave (asc)")+
ylab("Margin Leave/Remain")
install.packages('sdm')
installAll()
library(sdm)
installAll()
setwd("C:/Users/stuar/OneDrive/Documents/UNI leeds/geog5060/Project")
?sp
source('C:/Users/stuar/OneDrive/Documents/UNI leeds/geog5060/Project/Code_SDM_1.R', echo=TRUE)
library(tidyverse)
library(sf)
library(tmap)
library(GISTools)
library(rgdal)
library(sp)
library(RColorBrewer)
library(reshape2)
library(rpart)
library(rpart.plot)
library(visNetwork)
library(caret)
library(randomForest)
library(ranger)
library(sparkline)
library(sdm)
?gbif
library(CRAN)
library(rgbif)
#Script
#install.packages('sdm')
install.packages(rgbif)
install.packages("rgbif")
library(rgbif)
sp <- gbif("Lynx","Pardinus",download = T, geo=T,sp=F)
sp <- gbif("Lynx","Pardinus",download = T, geo=T,sp=F)
install.packages('dismo')
library(dismo)
library(dismo)
sp <- gbif("Lynx","Pardinus",download = T, geo=T,sp=F)
?gbif
sp <- gbif("Lynx","pardinus",download = T, geo=T,sp=F)
which(is.na(sp$lon))
w <- which(is.na(sp$lon))
sp <-sp[-w,]
m <- which(is.na(sp$lat))
sp <-sp[-m,]
sp <- sp[,c('lon','lat','species')]
head(sp)
w <- which(is.na(sp$lon))
sp <-sp[-w,]
m <- which(is.na(sp$lat))
sp <-sp[-m,]
sp <- gbif("Lynx","pardinus",download = T, geo=T,sp=F)
w <- which(is.na(sp$lon))
sp <-sp[-w,]
m <- which(is.na(sp$lat))
sp <-sp[-m,]
library(sdm)
sp <- gbif("Lynx","pardinus",download = T, geo=T,sp=F) # Download
w <- which(is.na(sp$lon))
sp <-sp[-w,]
sp$species <- 1
sp <- sp[,c('lon','lat','species')]    #remove uneeded columns
head(sp)
coordinates(sp) <- ~lon + lat
class(sp)
head(sp)
bio <- raster::getData('worldclim',var='bio',res=10)
bio
?worldclim
?worldclim
?getData
View(bio)
